openapi: "3.0.1"
info:
  title: "apigw-aep-tst-tenant-t"
  description: "apigw-aep-tst - API "
  version: "1.0"
servers: #include-in-diff
  - url: https://naxsvmayx1.execute-api.eu-west-1.amazonaws.com/dev #include-in-diff
paths:

  /aep/delivery/{processId}:
    get:
      tags:
        - delivery
      x-since-version: v1.0
      summary: download  message content for the given processId
      operationId: download
      parameters:
        - in: path
          name: processId
          schema:
            type: string
          required: true
          description: processId of the submission
      responses:
        200:
          description: OK
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/delivery/{processId}"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.processId: "method.request.path.processId"
        passthroughBehavior: "when_no_match"

  /aep/recipients:
    get:
      tags:
        - recipients
      x-since-version: v1.0
      summary: Filter recipients
      operationId: getRecipients
      parameters:
        - in: query
          name: recipientsQuery
          required: true
          schema:
            $ref: '#/components/schemas/RecipientsQuery'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RecipientsResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/recipients"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

    post:
      tags:
        - recipients
      x-since-version: v1.0
      summary: Create recipient for message type
      operationId: postRecipient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipient"
      responses:
        201:
          description: Created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        409:
          description: Conflict
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/recipients"
        httpMethod: "post"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

    put:
      tags:
        - recipients
      x-since-version: v1.0
      summary: Update recipient for message type
      operationId: putRecipient
      parameters:
        - in: path
          name: messageType
          schema:
            type: string
          required: true
          description: message type of the recipient
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Recipient"
      responses:
        204:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/recipients"
        httpMethod: "put"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/recipients/{messageType}:
    get:
      tags:
        - recipients
      x-since-version: v1.0
      summary: Get recipient for message type
      operationId: getRecipient
      parameters:
        - in: path
          name: messageType
          schema:
            type: string
          required: true
          description: message type of the recipient
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Recipient"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/recipients/{messageType}"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.messageType: "method.request.path.messageType"
        passthroughBehavior: "when_no_match"

    delete:
      tags:
        - recipients
      x-since-version: v1.0
      summary: Delete recipient for message type
      operationId: deleteRecipient
      parameters:
        - in: path
          name: messageType
          schema:
            type: string
          required: true
          description: message type of the recipient
      responses:
        204:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeliveryErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-delivery/recipients/{messageType}"
        httpMethod: "delete"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.messageType: "method.request.path.messageType"
        passthroughBehavior: "when_no_match"

  /aep/submission:
    post:
      tags:
        - submission
      x-since-version: v1.0
      summary: Create a new submission request
      operationId: submitMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmissionRequest"
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-submission/submission"
        httpMethod: "post"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/submission/replay/{processId}:
    put:
      tags:
        - submission
      x-since-version: v1.0
      summary: Replay existing submission request
      operationId: replayMessage
      parameters:
        - in: path
          name: processId
          schema:
            type: string
          required: true
          description: processId of existing submission request to replay
      responses:
        201:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplayResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SubmissionErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-submission/submission/replay/{processId}"
        httpMethod: "put"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.processId: "method.request.path.processId"
        passthroughBehavior: "when_no_match"

  /aep/process-results:
    get:
      tags:
        - audit
      x-since-version: v1.0
      summary: download a list of process results that exist between two given datetime objects (from & until)
      operationId: processResults
      parameters:
        - in: query
          name: processResultsParams
          required: true
          schema:
            $ref: '#/components/schemas/ProcessResultsRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResultsResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-audit/process-results"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/process-results/{processId}:
    get:
      tags:
        - audit
      x-since-version: v1.0
      summary: download process results based on the given processId
      operationId: processResult
      parameters:
        - in: path
          name: processId
          schema:
            type: string
          required: true
          description: processId
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProcessResultResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditErrorResponse"
        404:
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-audit/process-results/{processId}"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.processId: "method.request.path.processId"
        passthroughBehavior: "when_no_match"

  /aep/preconditions/message-types:
    get:
      tags:
        - preconditions
      x-since-version: v1.0
      summary: Get all message types from preconditions
      operationId: getMessageTypes
      parameters:
        - in: query
          name: params
          required: true
          schema:
            $ref: "#/components/schemas/MessageTypeQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionsErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-preconditions/preconditions/message-types"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/preconditions:
    get:
      tags:
        - preconditions
      x-since-version: v1.0
      summary: Get all currently valid or last valid preconditions
      operationId: getPreconditions
      parameters:
        - in: query
          name: params
          required: true
          schema:
            $ref: "#/components/schemas/PreconditionsQuery"
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Preconditions"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionsErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-preconditions/preconditions"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

    delete:
      tags:
        - preconditions
      x-since-version: v1.0
      summary: Disable all preconditions for the message type and service
      operationId: deletePreconditions
      parameters:
        - in: query
          name: params
          required: true
          schema:
            $ref: "#/components/schemas/PreconditionsDeleteQuery"
      responses:
        204:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionsErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-preconditions/preconditions"
        httpMethod: "delete"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

    put:
      tags:
        - preconditions
      x-since-version: v1.0
      summary: Update preconditions for the message type
      operationId: putPreconditions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              minItems: 1
              items:
                $ref: "#/components/schemas/Preconditions"
      responses:
        204:
          description: OK
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PreconditionsErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-preconditions/preconditions"
        httpMethod: "put"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/schemas:
    get:
      tags:
        - schemas
      x-since-version: v1.0
      summary: Get all message types with schemas configured
      operationId: getSchemasConfiguredMessageTypes
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-xml-validation/schemas"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"


        passthroughBehavior: "when_no_match"

  /aep/schemas/{messageType}:
    get:
      tags:
        - schemas
      x-since-version: v1.0
      summary: Get all schemas for message type
      operationId: getSchemas
      parameters:
        - in: path
          name: messageType
          schema:
            type: string
          required: true
          description: message type to get schemas for
      responses:
        200:
          description: OK
          content:
            application/*:
              schema:
                type: string
                format: binary
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        500:
          description: Server error


      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-xml-validation/schemas/{messageType}"
        httpMethod: "get"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.messageType: "method.request.path.messageType"
        passthroughBehavior: "when_no_match"

    put:
      tags:
        - schemas
      x-since-version: v1.0
      summary: Update schemas for message type, overwrites all schemas with supplied ones
      operationId: putSchemas
      parameters:
        - in: path
          name: messageType
          schema:
            type: string
          required: true
          description: message type to put schemas for
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SchemasResponse"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        404:
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        415:
          description: Unsupported Type
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/XmlValidationErrorResponse"
        500:
          description: Server error
      security:
        - api_key: []
      x-amazon-apigateway-integration:
        type: "http"
        uri: "http://alb-aep-tst-1190628515.eu-west-1.elb.amazonaws.com/aep-service-xml-validation/schemas/{messageType}"
        httpMethod: "put"
        responses:
          "201":
            statusCode: "201"
          "500":
            statusCode: "500"
          "4\\d{2}":
            statusCode: "404"
          "200":
            statusCode: "200"
        requestParameters:
          integration.request.path.messageType: "method.request.path.messageType"
        passthroughBehavior: "when_no_match"


components:
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
      x-amazon-apigateway-api-key-source: "HEADER"
  schemas:


    RecipientsQuery:
      type: object
      description: Filtering criteria for recipients, sorted by messageType
      properties:
        pageSize:
          type: integer
          minimum: 1
          maximum: 200
          default: 20
          description: The given page size
        pageNumber:
          type: integer
          minimum: 0
          default: 0
          description: The given page number
        sortOrder:
          type: string
          enum: [ asc, desc ]
          default: desc
          description: The given sort order

    Recipient:
      type: object
      description: Recipient details
      required:
        - messageType
        - endpoint
      properties:
        messageType:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _-]*[a-zA-Z0-9]$"
          description: The type of message
        endpoint:
          type: string
          pattern: ^(https?:\/\/)?((([a-zA-Z0-9\-]+\.)+[a-zA-Z]{2,})||(\d{1,3}\.){3}\d{1,3})(:\d+)?(\/[a-zA-Z0-9\-._~:\/?#@!$&'()*+,;=%]*)?$
          example: "https://example.com"

    RecipientsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/Recipient"
        pageNumber:
          type: integer
        totalPages:
          type: integer

    DeliveryErrorResponse:
      type: object
      description: Delivery service error response

    SubmissionRequest:
      type: object
      description: The object to send to Submission methods
      required:
        - messageId
        - messageType
        - file
        - identitySender
        - identityRecipient
      properties:
        messageId:
          type: string
          minLength: 1
          description: The messageId provided by the customer
        file:
          $ref: '#/components/schemas/SubmissionRequestFile'
        identitySender:
          $ref: '#/components/schemas/IdentitySender'
        identityRecipient:
          $ref: '#/components/schemas/IdentityRecipient'
        identitySubject:
          $ref: '#/components/schemas/IdentitySubject'
        messageType:
          type: string
          minLength: 1
          description: The type of message that is submitted and that defines the processing of the message.

    SubmissionResponse:
      type: object
      description: The returned object after a successful submissionRequest
      required:
        - messageId
        - processId
        - timestampReceived
      properties:
        messageId:
          type: string
          description: The messageId from the submissionRequest
        processId:
          type: string
          description: The processId generated from the submissionRequest
        messageType:
          type: string
          description: The messageType from the submissionRequest
        identitySender:
          $ref: '#/components/schemas/IdentitySender'
        identityRecipient:
          $ref: '#/components/schemas/IdentityRecipient'
        timestampReceived:
          type: string
          description: The timestamp at which the original SubmissionRequest was received

    SubmissionErrorResponse:
      type: object
      description: Submission service error response

    SubmissionRequestFile:
      type: object
      description: The sent file
      required:
        - mimeType
        - content
      properties:
        mimeType:
          type: string
          description: The given mimeType
          enum:
            - application/xml
            - application/pdf
            - application/zip
            - application/xhtml+xml
            - text/plain
        content:
          type: string
          minLength: 1
          description: The given content
        fileName:
          type: string
          description: The (optionally) given fileName

    IdentitySender:
      type: object
      description: Identity of the Sender
      required:
        - schemeName
        - senderRef
      properties:
        schemeName:
          type: string
          description: The given sender schemeName
        senderRef:
          type: string
          minLength: 1
          description: The given senderRef

    IdentityRecipient:
      type: object
      description: Identity of the Recipient
      required:
        - schemeName
        - recipientRef
      properties:
        schemeName:
          type: string
          minLength: 1
          description: The given recipient schemeName
        recipientRef:
          type: string
          minLength: 1
          description: The given recipientRef

    IdentitySubject:
      type: object
      description: Identity of the Subject
      required:
        - schemeName
        - subjectRef
      properties:
        schemeName:
          type: string
          minLength: 1
          description: The given subject schemeName
        subjectRef:
          type: string
          minLength: 1
          description: The given subjectRef

    ReplayResponse:
      type: object
      description: Response for Replaying messages
      required:
        - messageId
        - processId
        - messageType
      properties:
        messageId:
          type: string
          minLength: 1
          description: The messageId provided by the customer
        processId:
          type: string
          description: The newly generated processId after replaying the message successfully
        messageType:
          type: string
          description: The type of message that is submitted and that defines the processing of the message

    ProcessResultsRequest:
      type: object
      description: The given object containing two datetime objects (from & until) & filtering criteria
      properties:
        from:
          type: string
          format: date-time
          default: 2024-01-01T00:00:00.000000000Z
          description: Submission date range
        until:
          type: string
          format: date-time
          default: 9999-12-31T00:00:00.000000000Z
          description: Submission date range
        pageSize:
          type: integer
          minimum: 1
          maximum: 200
          default: 20
          description: The given page size
        pageNumber:
          type: integer
          minimum: 1
          default: 1
          description: The given page number
        sortOrder:
          type: string
          enum: [ asc, desc ]
          default: desc
          description: The given sort order
        messageType:
          type: string

    ProcessResultResponse:
      type: object
      description: The returned object with the process results
      required:
        - processId
        - messageType
        - submissionDate
        - lastStatus
        - attachmentName
        - processServiceResults
      properties:
        processId:
          type: string
          description: The processId generated from the submissionRequest
        messageType:
          type: string
          description: The type of message that is submitted and that defines the processing of the message.
        submissionDate:
          type: string
          format: date-time
          description: The date of submission
        lastService:
          type: string
          description: The last service that was found within the processServiceResults array
        lastStatus:
          type: string
          description: The last status that was found for this process
        attachmentName:
          type: string
          description: The name of the attachment
        processServiceResults:
          type: array
          description: The results from the services
          items:
            $ref: '#/components/schemas/ServiceResultAudit'

    ServiceResultAudit:
      description: The results from one service
      type: object
      properties:
        service:
          type: string
          description: The name of the service.
        success:
          type: boolean
          description: Indicates if the result of the service is success (true) or error (false). Note error can be a technical or a functional error.
        time:
          type: string
          format: date-time
          description: Service execution timestamp in ISO-8601 format.
        results:
          type: array
          description: The key value pairs with the results of the service
          items:
            $ref: '#/components/schemas/ResultAudit'
      required:
        - service
        - results
        - success
        - time

    ResultAudit:
      description: Single result value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      required:
        - key
        - value

    ProcessResultsResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: "#/components/schemas/ProcessResultResponse"
        pageNumber:
          type: integer
        totalPages:
          type: integer

    AuditErrorResponse:
      type: object
      description: Audit service error response.

    MessageTypeQuery:
      type: object
      description: Filtering criteria for message types
      properties:
        service:
          type: string
          description: Service name

    PreconditionsQuery:
      type: object
      description: Filtering criteria for preconditions
      properties:
        messageType:
          type: string
          description: Type of message
        service:
          type: string
          description: Service name

    PreconditionsDeleteQuery:
      type: object
      description: Filtering criteria for preconditions deletion
      required:
        - messageType
      properties:
        messageType:
          type: string
          description: Type of message
        service:
          type: string
          description: Service name

    Preconditions:
      type: object
      description: Preconditions details
      required:
        - messageType
        - service
        - preconditions
      properties:
        messageType:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _-]*[a-zA-Z0-9]$"
          description: The type of message
        service:
          type: string
          pattern: "^[a-zA-Z0-9][a-zA-Z0-9 _-]*[a-zA-Z0-9]$"
          description: Service name
        preconditions:
          type: array
          items:
            $ref: '#/components/schemas/Precondition'

    PreconditionsErrorResponse:
      type: object
      description: The returned object after an invalid submissionRequest

    Precondition:
      type: object
      description: Precondition
      properties:
        previousService:
          type: string
          description: The name of the previous service
        success:
          type: boolean
        results:
          type: array
          items:
            $ref: '#/components/schemas/PreconditionResult'

    PreconditionResult:
      type: object
      description: PreconditionResult
      properties:
        key:
          type: string
        value:
          type: string
        operator:
          type: string

    SchemasResponse:
      type: object
      description: Message type schemas response
      properties:
        location:
          type: string
          description: Schemas location in S3
      required:
        - location

    XmlValidationErrorResponse:
      type: object
      description: Error response for XML validation service


x-amazon-apigateway-binary-media-types:
- "*/*"
